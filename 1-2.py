# 1  - Алгоритм шифрования, шифр простой перестановки, с добавлением нулей, отдельный символ
# 2  - Алгоритм расшифровывания, шифр простой перестановки, с добавлением нулей, отдельный символ
#
# Алгоритм шифрования на основе простой перестановки преобразует исходный текст в шифрованный текст, переставляя символы в соответствии с заданным ключом.
#
# Шаги алгоритма следующие:
#
# Преобразуйте ключ в последовательность чисел, которая будет использоваться для определения порядка перестановки символов в тексте. Можно использовать функцию ord() для этого в Python, чтобы преобразовать символы ключа в числа.
#
# Разбейте исходный текст на блоки заданной длины. Если последний блок меньше заданной длины, добавьте нули в конец блока, чтобы дополнить его до нужной длины. Если блок уже имеет нужную длину, то он не будет изменяться.
#
# Примените перестановку к каждому блоку текста. Для каждого блока текста примените порядок перестановки, полученный на шаге 1. Каждый символ в блоке будет заменен символом, находящимся на позиции, определенной порядком перестановки. Для этого можно использовать простой цикл for и обращение к символам строки по индексу.
#
# Объедините блоки в одну строку, чтобы получить шифрованный текст.
#
# Возвращайте шифрованный текст как результат работы алгоритма
#
# нужно реализовать алгоритм шифрования, шифр простой перестановки, должна работать со способом шифрования последнего блока с добавлением нулей, должна быть поддержка элемента блока отдельный символ
# всё ли тебе понятно?
